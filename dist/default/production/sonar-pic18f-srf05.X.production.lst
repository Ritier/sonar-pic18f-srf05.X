

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jun 02 12:23:04 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F25K22 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _CCPR5	set	3925
    51  0000                     _CCPTMRS1bits	set	3912
    52  0000                     _CCP5CONbits	set	3924
    53  0000                     _ANSELA	set	3896
    54  0000                     _CCPR1	set	4030
    55  0000                     _PIR4bits	set	3963
    56  0000                     _PORTAbits	set	3968
    57  0000                     _PIR1bits	set	3998
    58  0000                     _T1CONbits	set	4045
    59  0000                     _IPR4bits	set	3964
    60  0000                     _PIE4bits	set	3962
    61  0000                     _PR2	set	4027
    62  0000                     _T2CONbits	set	4026
    63  0000                     _T2CON	set	4026
    64  0000                     _IPR1bits	set	3999
    65  0000                     _PIE1bits	set	3997
    66  0000                     _INTCONbits	set	4082
    67  0000                     _RCONbits	set	4048
    68  0000                     _TRISAbits	set	3986
    69                           
    70                           ; #config settings
    71  0000                     
    72                           	psect	cinit
    73  00019C                     __pcinit:
    74                           	opt stack 0
    75  00019C                     start_initialization:
    76                           	opt stack 0
    77  00019C                     __initialization:
    78                           	opt stack 0
    79                           
    80                           ; Clear objects allocated to COMRAM (9 bytes)
    81  00019C  EE00  F015         	lfsr	0,__pbssCOMRAM
    82  0001A0  0E09               	movlw	9
    83  0001A2                     clear_0:
    84  0001A2  6AEE               	clrf	postinc0,c
    85  0001A4  06E8               	decf	wreg,f,c
    86  0001A6  E1FD               	bnz	clear_0
    87  0001A8                     end_of_initialization:
    88                           	opt stack 0
    89  0001A8                     __end_of__initialization:
    90                           	opt stack 0
    91  0001A8  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    92  0001AA  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    93  0001AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    94  0001AE  6EF8               	movwf	tblptru,c
    95  0001B0  0100               	movlb	0
    96  0001B2  EFDB  F000         	goto	_main	;jump to C main() function
    97                           tblptru	equ	0xFF8
    98                           postinc0	equ	0xFEE
    99                           wreg	equ	0xFE8
   100                           
   101                           	psect	bssCOMRAM
   102  000015                     __pbssCOMRAM:
   103                           	opt stack 0
   104  000015                     _distance:
   105                           	opt stack 0
   106  000015                     	ds	2
   107  000017                     _capture:
   108                           	opt stack 0
   109  000017                     	ds	2
   110  000019                     _temp:
   111                           	opt stack 0
   112  000019                     	ds	2
   113  00001B                     	ds	2
   114  00001D                     _trigger:
   115                           	opt stack 0
   116  00001D                     	ds	1
   117                           tblptru	equ	0xFF8
   118                           postinc0	equ	0xFEE
   119                           wreg	equ	0xFE8
   120                           
   121                           	psect	cstackCOMRAM
   122  000001                     __pcstackCOMRAM:
   123                           	opt stack 0
   124  000001                     CompleteCapture@instant:
   125                           	opt stack 0
   126                           
   127                           ; 2 bytes @ 0x0
   128  000001                     	ds	2
   129  000003                     ??_CompleteCapture:
   130                           
   131                           ; 1 bytes @ 0x2
   132  000003                     	ds	2
   133  000005                     ??_interruptions:
   134                           
   135                           ; 1 bytes @ 0x4
   136  000005                     	ds	14
   137  000013                     interruptions@val:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x12
   141  000013                     	ds	2
   142  000015                     tblptru	equ	0xFF8
   143                           postinc0	equ	0xFEE
   144                           wreg	equ	0xFE8
   145                           
   146                           ; 1 bytes @ 0x14
   147 ;;
   148 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   149 ;;
   150 ;; *************** function _main *****************
   151 ;; Defined at:
   152 ;;		line 166 in file "main.c"
   153 ;; Parameters:    Size  Location     Type
   154 ;;		None
   155 ;; Auto vars:     Size  Location     Type
   156 ;;		None
   157 ;; Return value:  Size  Location     Type
   158 ;;                  1    wreg      void 
   159 ;; Registers used:
   160 ;;		wreg, status,2, cstack
   161 ;; Tracked objects:
   162 ;;		On entry : 0/0
   163 ;;		On exit  : 0/0
   164 ;;		Unchanged: 0/0
   165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   166 ;;      Params:         0       0       0       0       0       0       0
   167 ;;      Locals:         0       0       0       0       0       0       0
   168 ;;      Temps:          0       0       0       0       0       0       0
   169 ;;      Totals:         0       0       0       0       0       0       0
   170 ;;Total ram usage:        0 bytes
   171 ;; Hardware stack levels required when called:    3
   172 ;; This function calls:
   173 ;;		_initialisationHardware
   174 ;; This function is called by:
   175 ;;		Startup code after reset
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           	psect	text0
   180  0001B6                     __ptext0:
   181                           	opt stack 0
   182  0001B6                     _main:
   183                           	opt stack 28
   184                           
   185                           ;main.c: 168: initialisationHardware();
   186                           
   187                           ;incstack = 0
   188  0001B6  EC87  F000         	call	_initialisationHardware	;wreg free
   189  0001BA                     l75:
   190  0001BA  D7FF               	goto	l75
   191  0001BC                     __end_of_main:
   192                           	opt stack 0
   193                           tblptru	equ	0xFF8
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           
   197 ;; *************** function _initialisationHardware *****************
   198 ;; Defined at:
   199 ;;		line 40 in file "main.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;		None
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   213 ;;      Params:         0       0       0       0       0       0       0
   214 ;;      Locals:         0       0       0       0       0       0       0
   215 ;;      Temps:          0       0       0       0       0       0       0
   216 ;;      Totals:         0       0       0       0       0       0       0
   217 ;;Total ram usage:        0 bytes
   218 ;; Hardware stack levels used:    1
   219 ;; Hardware stack levels required when called:    2
   220 ;; This function calls:
   221 ;;		Nothing
   222 ;; This function is called by:
   223 ;;		_main
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text1
   228  00010E                     __ptext1:
   229                           	opt stack 0
   230  00010E                     _initialisationHardware:
   231                           	opt stack 28
   232                           
   233                           ;main.c: 46: ANSELA=0;
   234                           
   235                           ;incstack = 0
   236  00010E  0E00               	movlw	0
   237  000110  010F               	movlb	15	; () banked
   238  000112  6F38               	movwf	56,b	;volatile
   239                           
   240                           ; BSR set to: 15
   241                           ;main.c: 47: TRISAbits.RA4=1;
   242  000114  8892               	bsf	3986,4,c	;volatile
   243                           
   244                           ; BSR set to: 15
   245                           ;main.c: 48: TRISAbits.RA3=0;
   246  000116  9692               	bcf	3986,3,c	;volatile
   247                           
   248                           ; BSR set to: 15
   249                           ;main.c: 49: TRISAbits.RA5=0;
   250  000118  9A92               	bcf	3986,5,c	;volatile
   251                           
   252                           ; BSR set to: 15
   253                           ;main.c: 52: RCONbits.IPEN = 1;
   254  00011A  8ED0               	bsf	4048,7,c	;volatile
   255                           
   256                           ; BSR set to: 15
   257                           ;main.c: 53: INTCONbits.GIEH = 1;
   258  00011C  8EF2               	bsf	intcon,7,c	;volatile
   259                           
   260                           ; BSR set to: 15
   261                           ;main.c: 54: INTCONbits.GIEL = 1;
   262  00011E  8CF2               	bsf	intcon,6,c	;volatile
   263                           
   264                           ; BSR set to: 15
   265                           ;main.c: 60: PIE1bits.TMR2IE = 1;
   266  000120  829D               	bsf	3997,1,c	;volatile
   267                           
   268                           ; BSR set to: 15
   269                           ;main.c: 61: IPR1bits.TMR2IP = 1;
   270  000122  829F               	bsf	3999,1,c	;volatile
   271                           
   272                           ; BSR set to: 15
   273                           ;main.c: 64: T2CON |= 0;
   274  000124  50BA               	movf	4026,w,c	;volatile
   275                           
   276                           ; BSR set to: 15
   277                           ;main.c: 65: T2CONbits.TMR2ON = 1;
   278  000126  84BA               	bsf	4026,2,c	;volatile
   279                           
   280                           ; BSR set to: 15
   281                           ;main.c: 66: T2CONbits.T2CKPS1 = 0;
   282  000128  92BA               	bcf	4026,1,c	;volatile
   283                           
   284                           ; BSR set to: 15
   285                           ;main.c: 67: T2CONbits.T2CKPS0 = 0;
   286  00012A  90BA               	bcf	4026,0,c	;volatile
   287                           
   288                           ; BSR set to: 15
   289                           ;main.c: 68: PR2 = 1;
   290  00012C  0E01               	movlw	1
   291  00012E  6EBB               	movwf	4027,c	;volatile
   292                           
   293                           ; BSR set to: 15
   294                           ;main.c: 74: CCP5CONbits.CCP5M = 0b101;
   295  000130  010F               	movlb	15	; () banked
   296  000132  5154               	movf	84,w,b	;volatile
   297  000134  0BF0               	andlw	-16
   298  000136  0905               	iorlw	5
   299  000138  6F54               	movwf	84,b	;volatile
   300                           
   301                           ; BSR set to: 15
   302                           ;main.c: 75: CCPTMRS1bits.C5TSEL = 0;
   303  00013A  0EF3               	movlw	-13
   304  00013C  010F               	movlb	15	; () banked
   305  00013E  1748               	andwf	72,f,b	;volatile
   306                           
   307                           ; BSR set to: 15
   308                           ;main.c: 76: PIE4bits.CCP5IE = 1;
   309  000140  847A               	bsf	3962,2,c	;volatile
   310                           
   311                           ; BSR set to: 15
   312                           ;main.c: 77: IPR4bits.CCP5IP = 0;
   313  000142  947C               	bcf	3964,2,c	;volatile
   314                           
   315                           ; BSR set to: 15
   316                           ;main.c: 82: PIE1bits.TMR1IE = 1;
   317  000144  809D               	bsf	3997,0,c	;volatile
   318                           
   319                           ; BSR set to: 15
   320                           ;main.c: 83: IPR1bits.TMR1IP = 1;
   321  000146  809F               	bsf	3999,0,c	;volatile
   322                           
   323                           ; BSR set to: 15
   324                           ;main.c: 85: T1CONbits.TMR1ON = 1;
   325  000148  80CD               	bsf	4045,0,c	;volatile
   326                           
   327                           ; BSR set to: 15
   328                           ;main.c: 86: T1CONbits.T1CKPS = 0b00;
   329  00014A  0ECF               	movlw	-49
   330  00014C  16CD               	andwf	4045,f,c	;volatile
   331                           
   332                           ; BSR set to: 15
   333                           ;main.c: 87: T1CONbits.TMR1CS = 0;
   334  00014E  0E3F               	movlw	-193
   335  000150  16CD               	andwf	4045,f,c	;volatile
   336                           
   337                           ; BSR set to: 15
   338                           ;main.c: 88: T1CONbits.T1RD16 = 1;
   339  000152  82CD               	bsf	4045,1,c	;volatile
   340                           
   341                           ; BSR set to: 15
   342  000154  0012               	return		;funcret
   343  000156                     __end_of_initialisationHardware:
   344                           	opt stack 0
   345                           tblptru	equ	0xFF8
   346                           intcon	equ	0xFF2
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           
   350 ;; *************** function _interruptions *****************
   351 ;; Defined at:
   352 ;;		line 104 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  val             2   18[COMRAM] int 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   366 ;;      Params:         0       0       0       0       0       0       0
   367 ;;      Locals:         2       0       0       0       0       0       0
   368 ;;      Temps:         14       0       0       0       0       0       0
   369 ;;      Totals:        16       0       0       0       0       0       0
   370 ;;Total ram usage:       16 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; Hardware stack levels required when called:    1
   373 ;; This function calls:
   374 ;;		_CompleteCapture
   375 ;; This function is called by:
   376 ;;		Interrupt level 2
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	intcode
   381  000008                     __pintcode:
   382                           	opt stack 0
   383  000008                     _interruptions:
   384                           	opt stack 28
   385                           
   386                           ; BSR set to: 15
   387                           ;incstack = 0
   388  000008  821E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   389  00000A  CFFA F005          	movff	pclath,??_interruptions
   390  00000E  CFFB F006          	movff	pclatu,??_interruptions+1
   391  000012  CFE9 F007          	movff	fsr0l,??_interruptions+2
   392  000016  CFEA F008          	movff	fsr0h,??_interruptions+3
   393  00001A  CFE1 F009          	movff	fsr1l,??_interruptions+4
   394  00001E  CFE2 F00A          	movff	fsr1h,??_interruptions+5
   395  000022  CFD9 F00B          	movff	fsr2l,??_interruptions+6
   396  000026  CFDA F00C          	movff	fsr2h,??_interruptions+7
   397  00002A  CFF3 F00D          	movff	prodl,??_interruptions+8
   398  00002E  CFF4 F00E          	movff	prodh,??_interruptions+9
   399  000032  CFF6 F00F          	movff	tblptrl,??_interruptions+10
   400  000036  CFF7 F010          	movff	tblptrh,??_interruptions+11
   401  00003A  CFF8 F011          	movff	tblptru,??_interruptions+12
   402  00003E  CFF5 F012          	movff	tablat,??_interruptions+13
   403                           
   404                           ;main.c: 112: if (PIR1bits.TMR2IF) {
   405  000042  B29E               	btfsc	3998,1,c	;volatile
   406  000044  D01D               	goto	i2l800
   407  000046  D024               	goto	i2l56
   408  000048                     i2l58:
   409                           
   410                           ;main.c: 115: PR2 = 255;
   411  000048  68BB               	setf	4027,c	;volatile
   412                           
   413                           ;main.c: 116: PORTAbits.RA5 = 0;
   414  00004A  9A80               	bcf	3968,5,c	;volatile
   415                           
   416                           ;main.c: 117: temp ++;
   417  00004C  4A19               	infsnz	_temp,f,c
   418  00004E  2A1A               	incf	_temp+1,f,c
   419                           
   420                           ;main.c: 118: if (temp < 50){
   421  000050  BE1A               	btfsc	_temp+1,7,c
   422  000052  D006               	goto	i2l790
   423  000054  501A               	movf	_temp+1,w,c
   424  000056  E107               	bnz	i2l792
   425  000058  0E32               	movlw	50
   426  00005A  5C19               	subwf	_temp,w,c
   427  00005C  B0D8               	btfsc	status,0,c
   428  00005E  D003               	goto	i2l792
   429  000060                     i2l790:
   430                           
   431                           ;main.c: 119: temp ++;
   432  000060  4A19               	infsnz	_temp,f,c
   433  000062  2A1A               	incf	_temp+1,f,c
   434                           
   435                           ;main.c: 120: } else {
   436  000064  D014               	goto	i2l61
   437  000066                     i2l792:
   438                           
   439                           ;main.c: 121: trigger = TRIGGER_OFF;
   440  000066  0E01               	movlw	1
   441  000068  6E1D               	movwf	_trigger,c
   442                           
   443                           ;main.c: 122: temp = 0;
   444  00006A  0E00               	movlw	0
   445  00006C  6E1A               	movwf	_temp+1,c
   446  00006E  0E00               	movlw	0
   447  000070  6E19               	movwf	_temp,c
   448                           
   449                           ;main.c: 123: }
   450                           ;main.c: 124: break;
   451  000072  D00D               	goto	i2l61
   452  000074                     i2l794:
   453                           
   454                           ;main.c: 126: PR2 = 3;
   455  000074  0E03               	movlw	3
   456  000076  6EBB               	movwf	4027,c	;volatile
   457                           
   458                           ;main.c: 127: PORTAbits.RA5 = 1;
   459  000078  8A80               	bsf	3968,5,c	;volatile
   460                           
   461                           ;main.c: 128: trigger = TRIGGER_ON;
   462  00007A  0E00               	movlw	0
   463  00007C  6E1D               	movwf	_trigger,c
   464                           
   465                           ;main.c: 130: }
   466                           
   467                           ;main.c: 129: break;
   468  00007E  D007               	goto	i2l61
   469  000080                     i2l800:
   470  000080  501D               	movf	_trigger,w,c
   471                           
   472                           ; Switch size 1, requested type "space"
   473                           ; Number of cases is 2, Range of values is 0 to 1
   474                           ; switch strategies available:
   475                           ; Name         Instructions Cycles
   476                           ; simple_byte            7     4 (average)
   477                           ;	Chosen strategy is simple_byte
   478  000082  0A00               	xorlw	0	; case 0
   479  000084  B4D8               	btfsc	status,2,c
   480  000086  D7E0               	goto	i2l58
   481  000088  0A01               	xorlw	1	; case 1
   482  00008A  B4D8               	btfsc	status,2,c
   483  00008C  D7F3               	goto	i2l794
   484  00008E                     i2l61:
   485                           
   486                           ;main.c: 131: PIR1bits.TMR2IF = 0;
   487  00008E  929E               	bcf	3998,1,c	;volatile
   488  000090                     i2l56:
   489                           
   490                           ;main.c: 132: }
   491                           ;main.c: 134: if (PIR1bits.TMR1IF) {
   492  000090  A09E               	btfss	3998,0,c	;volatile
   493  000092  D004               	goto	i2l804
   494                           
   495                           ;main.c: 135: int val;
   496                           ;main.c: 136: val=0;
   497  000094  0E00               	movlw	0
   498  000096  6E14               	movwf	interruptions@val+1,c
   499  000098  0E00               	movlw	0
   500  00009A  6E13               	movwf	interruptions@val,c
   501  00009C                     i2l804:
   502                           
   503                           ;main.c: 137: }
   504                           ;main.c: 139: if (PIR4bits.CCP5IF) {
   505  00009C  A47B               	btfss	3963,2,c	;volatile
   506  00009E  D017               	goto	i2l67
   507                           
   508                           ;main.c: 140: if (PORTAbits.RA4) {
   509  0000A0  A880               	btfss	3968,4,c	;volatile
   510  0000A2  D009               	goto	i2l812
   511                           
   512                           ;main.c: 141: capture = CCPR1;
   513  0000A4  CFBE F017          	movff	4030,_capture	;volatile
   514  0000A8  CFBF F018          	movff	4031,_capture+1	;volatile
   515                           
   516                           ;main.c: 142: CCP5CONbits.CCP5M = 0b100;
   517  0000AC  010F               	movlb	15	; () banked
   518  0000AE  5154               	movf	84,w,b	;volatile
   519  0000B0  0BF0               	andlw	-16
   520  0000B2  0904               	iorlw	4
   521  0000B4  D00A               	goto	L1
   522  0000B6                     i2l812:
   523                           
   524                           ;main.c: 144: CompleteCapture(CCPR5);
   525  0000B6  CF55 F001          	movff	3925,CompleteCapture@instant	;volatile
   526  0000BA  CF56 F002          	movff	3926,CompleteCapture@instant+1	;volatile
   527  0000BE  ECAB  F000         	call	_CompleteCapture	;wreg free
   528                           
   529                           ;main.c: 145: CCP5CONbits.CCP5M = 0b101;
   530  0000C2  010F               	movlb	15	; () banked
   531  0000C4  5154               	movf	84,w,b	;volatile
   532  0000C6  0BF0               	andlw	-16
   533  0000C8  0905               	iorlw	5
   534  0000CA                     L1:
   535  0000CA  6F54               	movwf	84,b	;volatile
   536                           
   537                           ; BSR set to: 15
   538                           ;main.c: 146: }
   539                           ;main.c: 147: PIR4bits.CCP5IF = 0;
   540                           
   541                           ; BSR set to: 15
   542  0000CC  947B               	bcf	3963,2,c	;volatile
   543  0000CE                     i2l67:
   544  0000CE  C012  FFF5         	movff	??_interruptions+13,tablat
   545  0000D2  C011  FFF8         	movff	??_interruptions+12,tblptru
   546  0000D6  C010  FFF7         	movff	??_interruptions+11,tblptrh
   547  0000DA  C00F  FFF6         	movff	??_interruptions+10,tblptrl
   548  0000DE  C00E  FFF4         	movff	??_interruptions+9,prodh
   549  0000E2  C00D  FFF3         	movff	??_interruptions+8,prodl
   550  0000E6  C00C  FFDA         	movff	??_interruptions+7,fsr2h
   551  0000EA  C00B  FFD9         	movff	??_interruptions+6,fsr2l
   552  0000EE  C00A  FFE2         	movff	??_interruptions+5,fsr1h
   553  0000F2  C009  FFE1         	movff	??_interruptions+4,fsr1l
   554  0000F6  C008  FFEA         	movff	??_interruptions+3,fsr0h
   555  0000FA  C007  FFE9         	movff	??_interruptions+2,fsr0l
   556  0000FE  C006  FFFB         	movff	??_interruptions+1,pclatu
   557  000102  C005  FFFA         	movff	??_interruptions,pclath
   558  000106  921E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   559  000108  0011               	retfie		f
   560  00010A                     __end_of_interruptions:
   561                           	opt stack 0
   562                           pclatu	equ	0xFFB
   563                           pclath	equ	0xFFA
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           prodh	equ	0xFF4
   569                           prodl	equ	0xFF3
   570                           intcon	equ	0xFF2
   571                           postinc0	equ	0xFEE
   572                           fsr0h	equ	0xFEA
   573                           fsr0l	equ	0xFE9
   574                           wreg	equ	0xFE8
   575                           fsr1h	equ	0xFE2
   576                           fsr1l	equ	0xFE1
   577                           fsr2h	equ	0xFDA
   578                           fsr2l	equ	0xFD9
   579                           status	equ	0xFD8
   580                           
   581 ;; *************** function _CompleteCapture *****************
   582 ;; Defined at:
   583 ;;		line 156 in file "main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  instant         2    0[COMRAM] unsigned int 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   597 ;;      Params:         2       0       0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0       0       0
   599 ;;      Temps:          2       0       0       0       0       0       0
   600 ;;      Totals:         4       0       0       0       0       0       0
   601 ;;Total ram usage:        4 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_interruptions
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text3
   611  000156                     __ptext3:
   612                           	opt stack 0
   613  000156                     _CompleteCapture:
   614                           	opt stack 28
   615                           
   616                           ;main.c: 157: if (instant >= capture){
   617                           
   618                           ;incstack = 0
   619  000156  5017               	movf	_capture,w,c
   620  000158  5C01               	subwf	CompleteCapture@instant,w,c
   621  00015A  5018               	movf	_capture+1,w,c
   622  00015C  5802               	subwfb	CompleteCapture@instant+1,w,c
   623  00015E  A0D8               	btfss	status,0,c
   624  000160  D00E               	goto	i2l776
   625                           
   626                           ;main.c: 158: capture = (instant - capture);
   627  000162  C017  F003         	movff	_capture,??_CompleteCapture
   628  000166  C018  F004         	movff	_capture+1,??_CompleteCapture+1
   629  00016A  1E03               	comf	??_CompleteCapture,f,c
   630  00016C  1E04               	comf	??_CompleteCapture+1,f,c
   631  00016E  4A03               	infsnz	??_CompleteCapture,f,c
   632  000170  2A04               	incf	??_CompleteCapture+1,f,c
   633  000172  5001               	movf	CompleteCapture@instant,w,c
   634  000174  2403               	addwf	??_CompleteCapture,w,c
   635  000176  6E17               	movwf	_capture,c
   636  000178  5002               	movf	CompleteCapture@instant+1,w,c
   637  00017A  2004               	addwfc	??_CompleteCapture+1,w,c
   638  00017C  D009               	goto	L2
   639  00017E                     i2l776:
   640                           
   641                           ;main.c: 160: capture = (65536 - capture);
   642  00017E  6C17               	negf	_capture,c
   643  000180  1E18               	comf	_capture+1,f,c
   644  000182  B0D8               	btfsc	status,0,c
   645  000184  2A18               	incf	_capture+1,f,c
   646                           
   647                           ;main.c: 161: capture = (instant + capture);
   648  000186  5017               	movf	_capture,w,c
   649  000188  2401               	addwf	CompleteCapture@instant,w,c
   650  00018A  6E17               	movwf	_capture,c
   651  00018C  5018               	movf	_capture+1,w,c
   652  00018E  2002               	addwfc	CompleteCapture@instant+1,w,c
   653  000190                     L2:
   654  000190  6E18               	movwf	_capture+1,c
   655                           
   656                           ;main.c: 162: }
   657                           ;main.c: 163: distance = capture;
   658  000192  C017  F015         	movff	_capture,_distance
   659  000196  C018  F016         	movff	_capture+1,_distance+1
   660  00019A  0012               	return		;funcret
   661  00019C                     __end_of_CompleteCapture:
   662                           	opt stack 0
   663  0000                     pclatu	equ	0xFFB
   664                           pclath	equ	0xFFA
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           prodh	equ	0xFF4
   670                           prodl	equ	0xFF3
   671                           intcon	equ	0xFF2
   672                           postinc0	equ	0xFEE
   673                           fsr0h	equ	0xFEA
   674                           fsr0l	equ	0xFE9
   675                           wreg	equ	0xFE8
   676                           fsr1h	equ	0xFE2
   677                           fsr1l	equ	0xFE1
   678                           fsr2h	equ	0xFDA
   679                           fsr2l	equ	0xFD9
   680                           status	equ	0xFD8
   681                           pclatu	equ	0xFFB
   682                           pclath	equ	0xFFA
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           prodh	equ	0xFF4
   688                           prodl	equ	0xFF3
   689                           intcon	equ	0xFF2
   690                           postinc0	equ	0xFEE
   691                           fsr0h	equ	0xFEA
   692                           fsr0l	equ	0xFE9
   693                           wreg	equ	0xFE8
   694                           fsr1h	equ	0xFE2
   695                           fsr1l	equ	0xFE1
   696                           fsr2h	equ	0xFDA
   697                           fsr2l	equ	0xFD9
   698                           status	equ	0xFD8
   699                           
   700                           	psect	rparam
   701  0000                     pclatu	equ	0xFFB
   702                           pclath	equ	0xFFA
   703                           tblptru	equ	0xFF8
   704                           tblptrh	equ	0xFF7
   705                           tblptrl	equ	0xFF6
   706                           tablat	equ	0xFF5
   707                           prodh	equ	0xFF4
   708                           prodl	equ	0xFF3
   709                           intcon	equ	0xFF2
   710                           postinc0	equ	0xFEE
   711                           fsr0h	equ	0xFEA
   712                           fsr0l	equ	0xFE9
   713                           wreg	equ	0xFE8
   714                           fsr1h	equ	0xFE2
   715                           fsr1l	equ	0xFE1
   716                           fsr2h	equ	0xFDA
   717                           fsr2l	equ	0xFD9
   718                           status	equ	0xFD8
   719                           
   720                           	psect	temp
   721  00001E                     btemp:
   722                           	opt stack 0
   723  00001E                     	ds	1
   724  0000                     int$flags	set	btemp
   725                           pclatu	equ	0xFFB
   726                           pclath	equ	0xFFA
   727                           tblptru	equ	0xFF8
   728                           tblptrh	equ	0xFF7
   729                           tblptrl	equ	0xFF6
   730                           tablat	equ	0xFF5
   731                           prodh	equ	0xFF4
   732                           prodl	equ	0xFF3
   733                           intcon	equ	0xFF2
   734                           postinc0	equ	0xFEE
   735                           fsr0h	equ	0xFEA
   736                           fsr0l	equ	0xFE9
   737                           wreg	equ	0xFE8
   738                           fsr1h	equ	0xFE2
   739                           fsr1l	equ	0xFE1
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _interruptions in COMRAM

    _interruptions->_CompleteCapture

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptions in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptions in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptions in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptions in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptions in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptions in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
             _initialisationHardware
 ---------------------------------------------------------------------------------
 (1) _initialisationHardware                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interruptions                                       16    16      0     110
                                              4 COMRAM    16    16      0
                    _CompleteCapture
 ---------------------------------------------------------------------------------
 (3) _CompleteCapture                                      4     2      2     109
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisationHardware

 _interruptions (ROOT)
   _CompleteCapture

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      1D       1       30.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1D       9        0.0%
DATA                 0      0      1D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jun 02 12:23:04 2017

                             l75 01BA            __end_of_interruptions 010A  
                            _PR2 000FBB                              wreg 000FE8  
                   __CFG_LVP$OFF 000000                             i2l61 008E  
                           i2l56 0090                             i2l58 0048  
                           i2l67 00CE                             _main 01B6  
                           _temp 0019                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             fsr1l 000FE1  
                           fsr2l 000FD9                             btemp 001E  
                           prodh 000FF4                             prodl 000FF3  
                           start 010A                    __CFG_IESO$OFF 000000  
                   ___param_bank 000000                            ?_main 0001  
                          _CCPR1 000FBE                            _CCPR5 000F55  
                          _T2CON 000FBA                            i2l800 0080  
                          i2l812 00B6                            i2l804 009C  
                          i2l790 0060                            i2l776 017E  
                          i2l792 0066                            i2l794 0074  
                 __CFG_FCMEN$OFF 000000               __CFG_MCLRE$EXTMCLR 000000  
                          _pulse 001B                            pclath 000FFA  
                          tablat 000FF5                            status 000FD8  
                __initialization 019C                ??_CompleteCapture 0003  
                   __end_of_main 01BC                           ??_main 0015  
                  __activetblptr 000002                           _ANSELA 000F38  
                 __CFG_WDTEN$OFF 000000                     _CCPTMRS1bits 000F48  
                         clear_0 01A2                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                     __accesstop 0060          __end_of__initialization 01A8  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
       ??_initialisationHardware 0015                  _CompleteCapture 0156  
         __size_of_interruptions 0102                          __Hparam 0000  
                        __Lparam 0000                          __pcinit 019C  
                        __ramtop 0600                          _capture 0017  
                        __ptext0 01B6                          __ptext1 010E  
                        __ptext3 0156                        _T1CONbits 000FCD  
                      _T2CONbits 000FBA           CompleteCapture@instant 0001  
                        _trigger 001D             end_of_initialization 01A8  
                  __Lmediumconst 0000  __size_of_initialisationHardware 0048  
                        postinc0 000FEE                    _interruptions 0008  
                      _PORTAbits 000F80          __end_of_CompleteCapture 019C  
                      _TRISAbits 000F92                      _CCP5CONbits 000F54  
                 ?_interruptions 0001           _initialisationHardware 010E  
            start_initialization 019C                      __pbssCOMRAM 0015  
               ?_CompleteCapture 0001                        __pintcode 0008  
                ??_interruptions 0005                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                         _IPR4bits 000F7C  
                       _PIE4bits 000F7A                         _PIR1bits 000F9E  
                       _PIR4bits 000F7B                         _RCONbits 000FD0  
                       __Hrparam 0000                         __Lrparam 0000  
        ?_initialisationHardware 0001                         _distance 0015  
                  __size_of_main 0006   __end_of_initialisationHardware 0156  
                       int$flags 001E                 interruptions@val 0013  
                     _INTCONbits 000FF2                         intlevel2 0000  
       __size_of_CompleteCapture 0046                __CFG_FOSC$INTIO67 000000  
